# Configuration for "Add Update Label Weekly" action
# Copy this file to your project: `.github/maintenance-actions/add-update-label-config.yml`
# Customize the values below for your project's needs

# ==============================================================================
# Time thresholds (in days)
# ==============================================================================
timeframes:
  
  updatedByDays: 3     # Issues updated within this many days are considered current
  commentByDays: 7     # Issues not updated for this many days are prompted for an update
  inactiveByDays: 14   # Issues not updated for this many days are marked as inactive
  upperLimitDays: 35   # To reduce issue clutter, a GraphQL mutation minimizes repetitive 
                       #   bot comments by default. Bot comments older than this are not 
                       #   included to avoid GitHub rate limiting (and they should have 
                       #   been minimized during previous runs).

# ==============================================================================
# Project board configuration
# ==============================================================================
projectBoard:
  # Issues with this status on the Project Board will be checked for updates.
  targetStatus: "In progress (actively working)"
  
  # Optional: GraphQL node IDs for your project board (for future use)
  # projectBoardIds:
  #   projectNodeId: "PVT_kwDOABcD..."
  #   statusFieldId: "PVTSSF_lADO..."

# ==============================================================================
# Label configuration
# ==============================================================================
# This workflow uses issue labels both to identify issues that require review and 
# to exclude issues that do not. 

# Labels are identified as key-value pairs, i.e.
# 
#   labelKey1: "Label Name 1"
#   labelKey2: "Label Name 2"
#   ...

# The 'labelKey' values are used internally by the workflow and should not be 
# changed, however the 'Label Name' values can be customized to match your project's 
# preferred labels. 

# The 'Label Name' values shown in this section will be used as the default 
# values unless overridden by the optional `label-directory.yml` file.
# See "Label directory (Optional)" following.

labels:
  # Note: the following `status` 'labelKeys' are required. 
  # Label applied to issues that were recently updated (within `updatedByDays`)
  statusUpdated: "Status: Updated"
  
  # Label applied to issues needing update (`commentByDays` to `inactiveByDays` old)
  statusInactive1: "Status: To Update !"
  
  # Label applied to inactive issues (older than `inactiveByDays`)
  statusInactive2: "2 weeks inactive"
  
  # Label applied when issue assignee needs help
  statusHelpWanted: "Status: Help Wanted"

  # Note: the following 'labelKey: "Label Name"' pairs can be edited to match your
  # requirements. Issues with any of these labels will be skipped entirely. 
  exclude:
    - draft: "Draft"
    - er: "ER"
    - epic: "Epic"
    - dependency: "Dependency"
    - complexity0: "Complexity: Prework"
    # As needed, add additional labels to exclude here
    # - labelKey: "Label Name"


# ==============================================================================
# Label directory (Optional)
# ==============================================================================
# The path to your project's label directory YML file (relative to project root)
# is shown below. The automation will use your project's preferred "Label Name" 
# values if entered in this directory. 

labelDirectoryPath: ".github/maintenance-actions/label-directory.yml"

# Otherwise, the default values shown above in "Label configuration" will be used.


# ==============================================================================
# Bot configuration
# ==============================================================================
# Bot usernames whose comments should be minimized when they become outdated
# Comments are minimized if they're between 'commentByDays' and 'upperLimitDays' old
bots:
  - "github-actions[bot]"
  - "HackforLABot"
  # As needed, add any bot usernames here


# ==============================================================================
# Comment template
# ==============================================================================
# Template for the comment posted to issues needing updates
# Available variables:
#   ${assignees}          - @-mentions of all assignees (e.g., "@user1, @user2")
#   ${label}              - The label being applied (e.g., "Status: To Update")
#   ${cutoffTime}         - The formatted timestamp of when the issue was last updated
#   ${statusHelpWanted}   - Label applied by assignee asking for help
#
# You can use Markdown formatting to edit this template
commentTemplate: |
  Hello ${assignees}!
  
  Please add an update comment using the below template (even if you have a pull request). Afterwards, remove the `${label}` label and add the `${statusUpdated}` label.

  1. Progress: "What is the current status of your issue? What have you completed and what is left to do?"
  2. Blockers: "Explain any difficulties or errors encountered."
  3. Availability: "How much time will you have this week to work on this issue?"
  4. ETA: "When do you expect this issue to be completed?"
  5. Pictures (optional): "Add any pictures of the visual changes made to the site so far."

  If you need help, be sure to either: 1) place your issue in the "Questions/ In Review" status column of the Project Board and ask for help at your next meeting; 2) put a `${statusHelpWanted}` label on your issue and pull request; or 3) put up a request for assistance on the #hfla-site channel. Please note that including your questions in the issue comments- along with screenshots, if applicable- will help us to help you. [Here](https://github.com/hackforla/website/issues/1619#issuecomment-897315561) and [here](https://github.com/hackforla/website/issues/1908#issuecomment-877908152) are examples of well-formed questions.

  <sub>You are receiving this comment because your last comment was before ${cutoffTime}.</sub>
  
  Thanks for being part of the HfLA!


# ==============================================================================
# Advanced options
# ==============================================================================
# Uncomment and configure these if needed for your project

# # Custom timezone for cutoffTime display in comments (default: America/Los_Angeles)
# timezone: "America/New_York"

# # Dry run mode - log what would happen without making changes (default: false)
# dryRun: false
